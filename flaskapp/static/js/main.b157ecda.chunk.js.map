{"version":3,"sources":["userinput/AnswerRateBar.js","userinput/SearchButton.js","userinput/UserInput.js","namescreen/NameScreen.js","answerstab/AnswersTab.js","App.js","reportWebVitals.js","index.js"],"names":["AnswerRateBar","handleRate","rateState","buttonSize","isLiked","rated","liked","isDisliked","className","id","onClick","type","rateActions","style","opacity","color","size","disliked","reported","SearchButton","mirrored","goButtonClass","strLen","Math","max","minBoxLength","length","maxQuestionLength","width","process","MAX_QUESTION_LENGTH","MIN_BOX_LENGTH","errorPersistDuration","reset","defaultRateState","rateReducer","state","action","Error","UserInput","onServerResponse","promptType","qid","onResponseSent","React","useState","inputText","setInputText","showError","setShowError","errorMessage","setErrorMessage","isHidden","setIsHidden","setGoButtonClass","timeoutId","setTimeoutId","hiddenTimeoutId","setHiddenTimeoutId","shakeTimeoutId","setShakeTimeoutId","useReducer","rateDispatcher","cursor","setCursor","throwInputError","message","clearTimeout","setTimeout","errorShakeDuration","onSubmit","se","preventDefault","trim","requestOptions","method","headers","body","JSON","stringify","user_response","fetch","then","data","catch","err","onChange","target","selectionStart","value","maxLength","toString","onKeyDown","keyCode","onFocus","selectionEnd","hidden","NameScreen","handleNameSubmit","maxNameLength","AnswersTab","reloadButtonClass","handleAnswersReload","answers","onMouseLeave","scrollTo","Object","keys","reverse","map","currQuestion","likes","dislikes","totalResponses","content","zIndex","idx","App","username","setUsername","prompt","setPrompt","setPromptType","blur","setBlur","setQid","setAnswers","setReloadButtonClass","useEffect","thisUsername","handleInteract","document","activeElement","querySelector","focus","addEventListener","resp","ok","json","statusText","console","error","sensitive","nameInput","match","response","filter","onMouseEnter","res","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b157ecda.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./answerratebar.css\";\r\nimport { IoMdThumbsUp, IoMdThumbsDown, IoMdFlag } from \"react-icons/io\";\r\nimport { rateActions } from \"./UserInput\";\r\n\r\nconst AnswerRateBar = ({ handleRate, rateState, buttonSize = 60 }) => {\r\n  const isLiked = rateState.rated && rateState.liked;\r\n  const isDisliked = rateState.rated && !rateState.liked;\r\n\r\n  return (\r\n    <div className=\"rate-bar\">\r\n      <button\r\n        className=\"rate-option\"\r\n        id=\"like-option\"\r\n        onClick={() => handleRate({ type: rateActions.liked })}\r\n        style={{ opacity: `${isLiked + 0.3}` }}\r\n      >\r\n        <IoMdThumbsUp\r\n          className=\"option-icon\"\r\n          color=\"#27c840\"\r\n          size={buttonSize}\r\n        />\r\n      </button>\r\n\r\n      <button\r\n        className=\"rate-option\"\r\n        id=\"dislike-option\"\r\n        onClick={() => handleRate({ type: rateActions.disliked })}\r\n        style={{ opacity: `${isDisliked + 0.3}` }}\r\n      >\r\n        <IoMdThumbsDown\r\n          className=\"option-icon\"\r\n          color=\"#fe5f57\"\r\n          size={buttonSize}\r\n        />\r\n      </button>\r\n\r\n      <button\r\n        className=\"rate-option\"\r\n        id=\"report-option\"\r\n        onClick={() => handleRate({ type: rateActions.reported })}\r\n        style={{ opacity: `${rateState.reported + 0.3}` }}\r\n      >\r\n        <IoMdFlag className=\"option-icon\" color=\" #ffbc30\" size={buttonSize} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnswerRateBar;\r\n","import React from \"react\";\r\nimport { HiArrowNarrowRight } from \"react-icons/hi\";\r\nimport \"./userinput.css\";\r\nimport { minBoxLength, maxQuestionLength } from \"./UserInput\";\r\n\r\nconst SearchButton = ({ mirrored = \"\", goButtonClass }) => {\r\n  let strLen = Math.max(\r\n    minBoxLength,\r\n    3 + (mirrored.length / maxQuestionLength) * 35\r\n  );\r\n\r\n  return (\r\n    <button className={goButtonClass} style={{ width: `${strLen}rem` }}>\r\n      <span id=\"mirrored-input\">{mirrored}</span>\r\n      <HiArrowNarrowRight id=\"go-button-icon\" size={30} />\r\n    </button>\r\n  );\r\n};\r\nexport default SearchButton;\r\n","import React from \"react\";\r\nimport \"./userinput.css\";\r\nimport AnswerRateBar from \"./AnswerRateBar\";\r\nimport SearchButton from \"./SearchButton\";\r\n\r\nexport const maxQuestionLength = process.env.MAX_QUESTION_LENGTH || 60;\r\nexport const minBoxLength = process.env.MIN_BOX_LENGTH || 6;\r\n\r\nconst errorPersistDuration = 2000;\r\nconst errorFadeDuration = 500;\r\nconst errorShakeDuration = 300;\r\n\r\nexport const rateActions = {\r\n  liked: \"liked\",\r\n  disliked: \"disliked\",\r\n  reported: \"reported\",\r\n  reset: \"reset\",\r\n};\r\n\r\nconst defaultRateState = {\r\n  rated: false,\r\n  liked: false,\r\n  reported: false,\r\n};\r\n\r\nconst rateReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case rateActions.liked:\r\n      return state.rated && state.liked\r\n        ? { ...state, rated: false, liked: false }\r\n        : { ...state, rated: true, liked: true };\r\n\r\n    case rateActions.disliked:\r\n      return state.rated && !state.liked\r\n        ? { ...state, rated: false, liked: false }\r\n        : { ...state, rated: true, liked: false };\r\n    case rateActions.reported:\r\n      return { ...state, reported: !state.reported };\r\n\r\n    case rateActions.reset:\r\n      return defaultRateState;\r\n    default:\r\n      throw new Error(\"Unexpected action type\");\r\n  }\r\n};\r\n\r\nconst UserInput = ({\r\n  onServerResponse = null,\r\n  style = {},\r\n  promptType = \"a\",\r\n  qid = 0,\r\n  onResponseSent = null,\r\n}) => {\r\n  const [inputText, setInputText] = React.useState(\"\");\r\n\r\n  const [showError, setShowError] = React.useState(false);\r\n\r\n  const [errorMessage, setErrorMessage] = React.useState(() => \"Error\");\r\n\r\n  const [isHidden, setIsHidden] = React.useState(true);\r\n\r\n  const [goButtonClass, setGoButtonClass] = React.useState(\"go-button\");\r\n\r\n  const [timeoutId, setTimeoutId] = React.useState(null);\r\n\r\n  const [hiddenTimeoutId, setHiddenTimeoutId] = React.useState(null);\r\n\r\n  const [shakeTimeoutId, setShakeTimeoutId] = React.useState(null);\r\n\r\n  const [rateState, rateDispatcher] = React.useReducer(\r\n    rateReducer,\r\n    defaultRateState\r\n  );\r\n\r\n  const [cursor, setCursor] = React.useState(() => 0);\r\n\r\n  const handleUserType = (se) => {\r\n    setCursor(se.target.selectionStart);\r\n    setInputText(se.target.value);\r\n  };\r\n\r\n  const throwInputError = (message = \"Error\") => {\r\n    setErrorMessage(message);\r\n\r\n    setGoButtonClass(\"go-button error\");\r\n    setShowError(true);\r\n    setIsHidden(false);\r\n\r\n    if (timeoutId) clearTimeout(timeoutId);\r\n\r\n    if (hiddenTimeoutId) clearTimeout(hiddenTimeoutId);\r\n\r\n    if (!shakeTimeoutId) {\r\n      setShakeTimeoutId(\r\n        setTimeout(() => {\r\n          setShakeTimeoutId(null);\r\n          setGoButtonClass(\"go-button\");\r\n        }, errorShakeDuration + 5)\r\n      );\r\n    }\r\n    setTimeoutId(\r\n      setTimeout(() => {\r\n        setTimeoutId(null);\r\n        setShowError(false);\r\n      }, errorPersistDuration)\r\n    );\r\n\r\n    setHiddenTimeoutId(\r\n      setTimeout(() => {\r\n        setIsHidden(true);\r\n        setHiddenTimeoutId(null);\r\n      }, errorPersistDuration + errorFadeDuration)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * @param  {} se\r\n   *\r\n   * Takes in a submit event, shows an error message and start a timeout for when\r\n   * the error message needs to be hidden again. In the case where a previous timeout\r\n   * already exists, replace it with a new timeout to restart the timer\r\n   */\r\n  const handleUserSubmit = (se) => {\r\n    se.preventDefault();\r\n\r\n    if (inputText.trim().length < 2) {\r\n      throwInputError(\"Please enter more than 1 character\");\r\n    } else {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          user_response: inputText,\r\n          qid: qid,\r\n          rated: rateState.rated,\r\n          liked: rateState.liked,\r\n          reported: rateState.reported,\r\n        }),\r\n      };\r\n\r\n      fetch(\"/api/questions\", requestOptions)\r\n        .then((data) => {\r\n          if (onServerResponse) onServerResponse(data);\r\n        })\r\n        .catch((err) =>\r\n          throwInputError(\r\n            `Error happened: Could not connect to server!\r\n            ${err}`\r\n          )\r\n        );\r\n\r\n      if (onResponseSent) onResponseSent();\r\n      rateDispatcher({ type: rateActions.reset });\r\n    }\r\n    setInputText(\"\");\r\n  };\r\n\r\n  /**\r\n   * @param  {} se\r\n   * if the key is a navigation key i.e home, end, arrow keys, etc. they will be\r\n   * prevented from the default behaviour. This is done since the placeholder css\r\n   * cursor cannot move around and reflect the user's navigation\r\n   */\r\n  const handleInputKey = (se) => {\r\n    if (se.keyCode >= 35 && se.keyCode <= 45) {\r\n      se.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-interact-container\" style={style}>\r\n      <form id=\"user-input-container\" onSubmit={handleUserSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          id=\"input-bar\"\r\n          className=\"input-bar\"\r\n          onChange={handleUserType}\r\n          value={inputText}\r\n          maxLength={maxQuestionLength.toString()}\r\n          onKeyDown={handleInputKey}\r\n          onFocus={(se) => {\r\n            se.target.selectionStart = cursor;\r\n            se.target.selectionEnd = cursor;\r\n          }}\r\n        />\r\n        <SearchButton mirrored={inputText} goButtonClass={goButtonClass} />\r\n        <div\r\n          className=\"error-message\"\r\n          hidden={isHidden}\r\n          style={{ opacity: `${+showError}` }}\r\n        >\r\n          {errorMessage}\r\n        </div>\r\n        <span id=\"word-count\">\r\n          {inputText.length}/{maxQuestionLength}\r\n        </span>\r\n      </form>\r\n      {promptType === \"a\" && (\r\n        <AnswerRateBar handleRate={rateDispatcher} rateState={rateState} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default UserInput;\r\n","import React from \"react\";\r\nimport { maxNameLength } from \"../App\";\r\n\r\nexport default function NameScreen({\r\n  handleNameSubmit = () => {},\r\n  errorMessage = \"hi\",\r\n}) {\r\n  return (\r\n    <div className=\"name-input-screen\">\r\n      <form className=\"name-input-container\" onSubmit={handleNameSubmit}>\r\n        <span className=\"name-input-prompt\">What is your name?</span>\r\n        <input\r\n          className=\"input-bar\"\r\n          id=\"name-input\"\r\n          type=\"text\"\r\n          maxLength={maxNameLength}\r\n        />\r\n        <span className=\"name-input-error\">{errorMessage}</span>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { IoReloadOutline } from \"react-icons/io5\";\r\n\r\nexport default function AnswersTab({\r\n  reloadButtonClass = \"reload-button\",\r\n  handleAnswersReload = () => {\r\n    return;\r\n  },\r\n  answers = {},\r\n}) {\r\n  return (\r\n    <div\r\n      className=\"answers-tab\"\r\n      onMouseLeave={(se) => se.target.scrollTo(0, 0)}\r\n    >\r\n      <IoReloadOutline\r\n        className={reloadButtonClass}\r\n        onClick={handleAnswersReload}\r\n      />\r\n      {answers &&\r\n        Object.keys(answers)\r\n          .reverse()\r\n          .map((value) => {\r\n            const currQuestion = answers[`${value}`];\r\n            const likes = currQuestion.likes;\r\n            const dislikes = currQuestion.dislikes;\r\n            const totalResponses =\r\n              likes + dislikes === 0 ? 2 : likes + dislikes;\r\n\r\n            return (\r\n              <div key={value} className=\"answer-element\">\r\n                <div className=\"answer-info\">\r\n                  <b>\"{currQuestion.content}\"</b>: {currQuestion.likes} likes/{\" \"}\r\n                  {currQuestion.dislikes} dislikes\r\n                </div>\r\n                <div\r\n                  className=\"dislikes-bar response-bar\"\r\n                  style={{\r\n                    width: \"90%\",\r\n                  }}\r\n                ></div>\r\n                <div\r\n                  className=\"likes-bar response-bar\"\r\n                  style={{\r\n                    width: `${\r\n                      45 + ((likes - dislikes) / totalResponses) * 45\r\n                    }%`,\r\n                    zIndex: \"20\",\r\n                  }}\r\n                ></div>\r\n                {currQuestion.answers.map((data, idx) => (\r\n                  <div key={idx} className=\"question-response\">\r\n                    \"{data}\"\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            );\r\n          })}\r\n    </div>\r\n  );\r\n}\r\n","import UserInputArea from \"./userinput/UserInput\";\nimport NameScreen from \"./namescreen/NameScreen\";\nimport AnswersTab from \"./answerstab/AnswersTab\";\nimport React from \"react\";\nimport \"./app.css\";\n\nexport const blurAmount = \"5px\";\nexport const maxNameLength = \"20\";\nfunction App() {\n  const [username, setUsername] = React.useState(() => \"\");\n\n  const [errorMessage, setErrorMessage] = React.useState(() => \"\");\n\n  const [prompt, setPrompt] = React.useState(\n    \"It's your turn to ask a question\"\n  );\n\n  const [promptType, setPromptType] = React.useState(() => \"a\");\n\n  const [blur, setBlur] = React.useState(true);\n\n  const [qid, setQid] = React.useState(null);\n\n  const [answers, setAnswers] = React.useState(() => {});\n\n  const [reloadButtonClass, setReloadButtonClass] =\n    React.useState(\"reload-button\");\n\n  const handleServerRes = (res) => {\n    if (res.ok) {\n      res.json().then((res) => {\n        if (res.promptType === \"a\") {\n          res.sensitive ? setBlur(true) : setBlur(false);\n          setPrompt(`\"${res.prompt}\"`);\n          setPromptType(\"a\");\n          setQid(res.qid);\n        } else if (res.promptType === \"q\") {\n          setBlur(false);\n          setPrompt(res.prompt);\n          setPromptType(\"q\");\n          setQid(res.qid);\n        }\n      });\n    }\n  };\n\n  React.useEffect(() => {\n    const handleInteract = (se) => {\n      if (document.activeElement.id !== \"input-bar\" || !username)\n        document.querySelector(\".input-bar\").focus();\n    };\n\n    document.addEventListener(\"keydown\", handleInteract);\n    document.addEventListener(\"click\", handleInteract);\n\n    let thisUsername;\n\n    fetch(\"/api/name\")\n      .then((resp) => (resp.ok ? resp.json() : new Error(resp.statusText)))\n      .then((data) => {\n        setUsername(data.username);\n\n        thisUsername = data.username;\n      })\n      .catch((err) => console.error(err));\n\n    fetch(\"/api/initialprompt\")\n      .then((resp) => (resp.ok ? resp.json() : new Error(resp.statusText)))\n      .then((data) => {\n        setPromptType(data.promptType);\n\n        setQid(data.qid);\n\n        data.promptType === \"q\"\n          ? setPrompt(data.prompt)\n          : setPrompt(`\"${data.prompt}\"`);\n\n        !data.sensitive && thisUsername ? setBlur(false) : setBlur(true);\n      })\n      .catch((err) => console.error(err));\n\n    fetch(\"/api/answers\")\n      .then((resp) =>\n        resp.ok\n          ? resp.json().then((data) => setAnswers(data))\n          : console.error(`QnAPP: Failed to fetch answers ${resp.error()}`)\n      )\n      .catch(() => console.error(\"QnApp: Failed to fetch answers\"));\n  }, []);\n\n  const handleAnswersReload = (se) => {\n    setReloadButtonClass(\"reload-button disabled\");\n    setTimeout(() => {\n      setReloadButtonClass(\"reload-button\");\n    }, 3000);\n\n    fetch(\"/api/answers\")\n      .then((resp) => resp.json().then((data) => setAnswers(data)))\n      .catch(() => console.log(\"QnApp: Failed to fetch answers\"));\n  };\n\n  const handleNameSubmit = (se) => {\n    se.preventDefault();\n    const nameInput = document.querySelector(\".input-bar\").value.trim();\n\n    if (nameInput.length > 0 && !nameInput.match(/[\\p{P}\\p{S}]/u)) {\n      const requestOptions = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username: nameInput }),\n      };\n\n      fetch(\"api/name\", requestOptions)\n        .then((response) =>\n          response.ok\n            ? setUsername(nameInput)\n            : setErrorMessage(\n                \"Something went wrong trying to connect... Please reload\"\n              )\n        )\n        .catch(() => setErrorMessage(\"Could not connect to server\"));\n    } else {\n      setErrorMessage(\"Name cannot contain special characters\");\n    }\n\n    document.querySelector(\".input-bar\").value = \"\";\n  };\n\n  return (\n    <div className=\"App\">\n      {!username && (\n        <NameScreen\n          handleNameSubmit={handleNameSubmit}\n          errorMessage={errorMessage}\n        />\n      )}\n\n      {username && <div className=\"name-display\">{username}</div>}\n      <div\n        style={{\n          filter: `blur(${blur ? blurAmount : 0})`,\n        }}\n        className=\"prompt-container\"\n        onMouseEnter={() => setBlur(false)}\n      >\n        {prompt}\n      </div>\n      <UserInputArea\n        style={{ filter: `blur(${username ? 0 : blurAmount})` }}\n        onServerResponse={handleServerRes}\n        promptType={promptType}\n        qid={qid}\n        onResponseSent={() => {\n          setPrompt(\"Sending response...\");\n        }}\n      />\n      <AnswersTab\n        reloadButtonClass={reloadButtonClass}\n        handleAnswersReload={handleAnswersReload}\n        answers={answers}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}